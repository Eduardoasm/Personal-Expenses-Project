import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import conectarDB from '../utils/connectDb'
import User from '../models/models'
import { UserModel } from '../models/models'
import type { NextApiRequest, NextApiResponse } from 'next'
import { useState } from "react"
import type { FormEvent, ChangeEventHandler } from "react"
import axios from 'axios'

const Home: NextPage = () => {

  interface User{
    email: string;
    password: string
  }

  const [inputChange, setInputChange] = useState<User>({
    email: "",
    password: ""
  })

  const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {
    e.preventDefault();
    setInputChange({...inputChange, [e.currentTarget.name]: e.currentTarget.value})
    console.log(inputChange)
    // change(valueName, value)
  }

  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault()
    const res = await axios.post("/api/auth/loginUser", inputChange)
    console.log(res)
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form 
      onSubmit = {(e) => onSubmit(e)}>
        <input 
        type="email"
        name="email"
        value={inputChange.email}
        onChange={handleChange}
        />
        
        {/* </input> */}
        <input 
        type="password"
        name="password"
        onChange={handleChange}
        />

        {/* </input> */}
        <button>
          login
        </button>
      </form>
    </div>
  )
}


export default Home


export async function getServerSideProps(req: NextApiRequest,res: NextApiResponse) {

  try {
    await conectarDB();
    
    // const { params } = req
    // const userM = await User.findOne({email: req.body.email})

    // console.log(userM)
    // const res: UserModel = await User.find({});
    // const res: typeOf User = await User.find({})

    // const user = res.map((doc) => {
    //   const user = doc.toObject();
    //   user._id = `${user._id}`;
    //   return user;
    // });

    // console.log(res)
    return {props: {user : 123}}
    // return { props: { user } };
  } catch (error) {
    console.log(error);
  }
}